>>> MyList = __import__('1-my_list').MyList

'module docstring'
>>> m = __import__("1-my_list").__doc__
>>> len(m) > 1
True

'class docstring'
>>> doc = __import__("1-my_list").MyList.__doc__
>>> len(doc) > 1
True

'class docstring'
>>> doc = __import__("1-my_list").MyList.__doc__
>>> len(doc) > 1
True

'functions docstring'
>>> doc = __import__("1-my_list").MyList.print_sorted.__doc__
>>> len(doc) > 1
True

'only one argument'
>>> my_list = MyList()
>>> my_list.print_sorted(2)
Traceback (most recent call last):
...
TypeError: print_sorted() takes 1 positional argument but 2 were given

'Empty list'
>>> my_list = MyList()
>>> my_list.print_sorted()
[]

'combination of types'
>>> my_list = MyList([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11], 3])
>>> my_list.print_sorted()
Traceback (most recent call last):
...
TypeError: unorderable types: int() < list()

'list of lists'
>>> my_list = MyList([[5, 6, 7, 8], [9, 10, 11], [1, 2, 3, 4]])
>>> my_list.print_sorted()
[[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11]]
